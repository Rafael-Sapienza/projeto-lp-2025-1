

-----------------------------------------
            counter: 491


Exec Block:

Statement: Block([FuncDef(Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }), Print(FuncCall("fat", [CInt(13)]))])

Env: Environment { id: 17, stack_len: 0, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 492


In function execute_block:

All statements: [FuncDef(Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }), Print(FuncCall("fat", [CInt(13)]))]

Env: Environment { id: 17, stack_len: 0, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 494


In function execute_block:

Single Statement: FuncDef(Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) })

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 495


Exec FuncDef:

Statement: FuncDef(Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) })

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 497


In function execute_block:

Single Statement: Print(FuncCall("fat", [CInt(13)]))

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }] }



-----------------------------------------
            counter: 498


Exec Print:

Statement: Print(FuncCall("fat", [CInt(13)]))

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }] }



-----------------------------------------
            counter: 506


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 18, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 507


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 18, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 509


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 510


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 512


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 513


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 516


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 518


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 519


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 530


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 19, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 531


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 19, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 533


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 534


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 536


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 537


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 540


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 542


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 543


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 554


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 20, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 555


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 20, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 557


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 558


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 560


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 561


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 564


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 566


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 567


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 578


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 21, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 579


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 21, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 581


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 582


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 584


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 585


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 588


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 590


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 591


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 602


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 22, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 603


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 22, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 605


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 606


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 608


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 609


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 612


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 614


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 615


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 626


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 23, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 627


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 23, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 629


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 630


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 632


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 633


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 636


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 638


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 639


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 650


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 24, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 651


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 24, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 653


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 654


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 656


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 657


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 660


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 662


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 663


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 674


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 25, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 675


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 25, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 677


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 678


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 680


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 681


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 684


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 686


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 687


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 698


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 26, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 699


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 26, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 701


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 702


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 704


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 705


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 708


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 710


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 711


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 722


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 27, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 723


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 27, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 725


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 726


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 728


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 729


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 732


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 734


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 735


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 746


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 28, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 747


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 28, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 749


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 750


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 752


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 753


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 756


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 758


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 759


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 770


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 29, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 771


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 29, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 773


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 774


Exec VarDeclaration:

Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 776


In function execute_block:

Single Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 777


Exec IfThenElse:

Statement: IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))])))

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 780


In function execute_block:

All statements: [Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 782


In function execute_block:

Single Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 783


Exec Assignement:

Statement: Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 794


Exec Block:

Statement: Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])

Env: Environment { id: 30, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(1))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 795


In function execute_block:

All statements: [VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))]

Env: Environment { id: 30, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(1))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 797


In function execute_block:

Single Statement: VarDeclaration("resultado", CInt(0))

Env: Environment { id: 30, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(1))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }

