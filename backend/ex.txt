

-----------------------------------------
            counter: 210


Function fatorial parsed successfully

Function statement: Block([FuncDef(Function { name: "fatorial", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }], body: Some(Block([VarDeclaration("m", CInt(0)), IfThenElse(EQ(Var("x"), CInt(1)), Block([Assignment("m", CInt(1))]), Some(Block([Assignment("m", Mul(Var("x"), FuncCall("fatorial", [Sub(Var("x"), CInt(1))])))]))), Return(Var("m"))])) })])



-----------------------------------------
            counter: 211


main statement parsed successfully

main statement: Block([VarDeclaration("a", CInt(0)), Assignment("a", FuncCall("fatorial", [CInt(7)])), Print(CString("Resultado:")), Print(Var("a"))])



-----------------------------------------
            counter: 212


final statement: Block([FuncDef(Function { name: "fatorial", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }], body: Some(Block([VarDeclaration("m", CInt(0)), IfThenElse(EQ(Var("x"), CInt(1)), Block([Assignment("m", CInt(1))]), Some(Block([Assignment("m", Mul(Var("x"), FuncCall("fatorial", [Sub(Var("x"), CInt(1))])))]))), Return(Var("m"))])) }), VarDeclaration("a", CInt(0)), Assignment("a", FuncCall("fatorial", [CInt(7)])), Print(CString("Resultado:")), Print(Var("a"))])



-----------------------------------------
            counter: 213


Initial Type Env: Environment { id: 7, stack_len: 0, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 223


Final Type Env: Environment { id: 7, stack_len: 0, current_func: "fatorial", output: [], globals: Scope { variables: {"a": (true, TInteger)}, functions: {"fatorial": Function { name: "fatorial", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }], body: Some(Block([VarDeclaration("m", CInt(0)), IfThenElse(EQ(Var("x"), CInt(1)), Block([Assignment("m", CInt(1))]), Some(Block([Assignment("m", Mul(Var("x"), FuncCall("fatorial", [Sub(Var("x"), CInt(1))])))]))), Return(Var("m"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 225


Initial Exp Env: Environment { id: 8, stack_len: 0, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 488


Final Exp Env: Environment { id: 8, stack_len: 0, current_func: "", output: ["Resultado:", "5040"], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }

Variables: [] 

Functions: []

