

-----------------------------------------
            counter: 226


In function eval_function_call:

Env: Environment { id: 16, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }] }



-----------------------------------------
            counter: 227


In function eval_function_call:

Function 'f' successfully found in environment



-----------------------------------------
            counter: 229


In function eval_function_call:

new_env after copying functions: Environment { id: 17, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 232


In function eval_function_call:

new_env after mapping formal args: Environment { id: 17, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 238


Eval Mul:

Expression: Mul(Var("x"), Var("y"))

Env: Environment { id: 17, stack_len: 1, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 239


Eval Var:

Expression: Var("x")

Env: Environment { id: 17, stack_len: 1, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 240


Eval Var:

Expression: Var("y")

Env: Environment { id: 17, stack_len: 1, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 243


Eval Var:

Expression: Var("y")

Env: Environment { id: 17, stack_len: 1, current_func: "f", output: ["2"], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 246


Eval Var:

Expression: Var("x")

Env: Environment { id: 17, stack_len: 1, current_func: "f", output: ["2", "2"], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 250


Env is about to receive output from function f

Function f generated Environment { id: 17, stack_len: 0, current_func: "f", output: ["2", "2"], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }, stack: [] }

output: ["2", "2"]

Env after receiving output: Environment { id: 16, stack_len: 1, current_func: "", output: ["2", "2"], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"f": Function { name: "f", kind: TInteger, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Mul(Var("x"), Var("y"))), Print(Var("y")), Return(Var("x"))])) }}, adts: {} }] }

