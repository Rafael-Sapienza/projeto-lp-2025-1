

-----------------------------------------
            counter: 499


Eval Function Call:

Expression: FuncCall("fat", [CInt(13)])

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }] }



-----------------------------------------
            counter: 500


In function eval_function_call:

Env: Environment { id: 17, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }] }



-----------------------------------------
            counter: 501


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 503


In function eval_function_call:

new_env after copying functions: Environment { id: 18, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 505


In function eval_function_call:

new_env after mapping formal args: Environment { id: 18, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 514


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 515


Eval Var:

Expression: Var("n")

Env: Environment { id: 18, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 520


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 521


Eval Var:

Expression: Var("n")

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 522


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 523


In function eval_function_call:

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 524


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 526


In function eval_function_call:

new_env after copying functions: Environment { id: 19, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 527


Eval Var:

Expression: Var("n")

Env: Environment { id: 18, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(13))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 529


In function eval_function_call:

new_env after mapping formal args: Environment { id: 19, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 538


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 539


Eval Var:

Expression: Var("n")

Env: Environment { id: 19, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 544


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 545


Eval Var:

Expression: Var("n")

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 546


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 547


In function eval_function_call:

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 548


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 550


In function eval_function_call:

new_env after copying functions: Environment { id: 20, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 551


Eval Var:

Expression: Var("n")

Env: Environment { id: 19, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(12))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 553


In function eval_function_call:

new_env after mapping formal args: Environment { id: 20, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 562


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 563


Eval Var:

Expression: Var("n")

Env: Environment { id: 20, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 568


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 569


Eval Var:

Expression: Var("n")

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 570


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 571


In function eval_function_call:

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 572


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 574


In function eval_function_call:

new_env after copying functions: Environment { id: 21, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 575


Eval Var:

Expression: Var("n")

Env: Environment { id: 20, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(11))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 577


In function eval_function_call:

new_env after mapping formal args: Environment { id: 21, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 586


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 587


Eval Var:

Expression: Var("n")

Env: Environment { id: 21, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 592


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 593


Eval Var:

Expression: Var("n")

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 594


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 595


In function eval_function_call:

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 596


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 598


In function eval_function_call:

new_env after copying functions: Environment { id: 22, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 599


Eval Var:

Expression: Var("n")

Env: Environment { id: 21, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(10))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 601


In function eval_function_call:

new_env after mapping formal args: Environment { id: 22, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 610


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 611


Eval Var:

Expression: Var("n")

Env: Environment { id: 22, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 616


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 617


Eval Var:

Expression: Var("n")

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 618


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 619


In function eval_function_call:

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 620


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 622


In function eval_function_call:

new_env after copying functions: Environment { id: 23, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 623


Eval Var:

Expression: Var("n")

Env: Environment { id: 22, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(9))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 625


In function eval_function_call:

new_env after mapping formal args: Environment { id: 23, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 634


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 635


Eval Var:

Expression: Var("n")

Env: Environment { id: 23, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 640


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 641


Eval Var:

Expression: Var("n")

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 642


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 643


In function eval_function_call:

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 644


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 646


In function eval_function_call:

new_env after copying functions: Environment { id: 24, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 647


Eval Var:

Expression: Var("n")

Env: Environment { id: 23, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(8))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 649


In function eval_function_call:

new_env after mapping formal args: Environment { id: 24, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 658


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 659


Eval Var:

Expression: Var("n")

Env: Environment { id: 24, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 664


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 665


Eval Var:

Expression: Var("n")

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 666


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 667


In function eval_function_call:

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 668


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 670


In function eval_function_call:

new_env after copying functions: Environment { id: 25, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 671


Eval Var:

Expression: Var("n")

Env: Environment { id: 24, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(7))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 673


In function eval_function_call:

new_env after mapping formal args: Environment { id: 25, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 682


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 683


Eval Var:

Expression: Var("n")

Env: Environment { id: 25, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 688


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 689


Eval Var:

Expression: Var("n")

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 690


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 691


In function eval_function_call:

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 692


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 694


In function eval_function_call:

new_env after copying functions: Environment { id: 26, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 695


Eval Var:

Expression: Var("n")

Env: Environment { id: 25, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(6))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 697


In function eval_function_call:

new_env after mapping formal args: Environment { id: 26, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 706


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 707


Eval Var:

Expression: Var("n")

Env: Environment { id: 26, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 712


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 713


Eval Var:

Expression: Var("n")

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 714


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 715


In function eval_function_call:

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 716


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 718


In function eval_function_call:

new_env after copying functions: Environment { id: 27, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 719


Eval Var:

Expression: Var("n")

Env: Environment { id: 26, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(5))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 721


In function eval_function_call:

new_env after mapping formal args: Environment { id: 27, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 730


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 731


Eval Var:

Expression: Var("n")

Env: Environment { id: 27, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 736


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 737


Eval Var:

Expression: Var("n")

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 738


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 739


In function eval_function_call:

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 740


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 742


In function eval_function_call:

new_env after copying functions: Environment { id: 28, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 743


Eval Var:

Expression: Var("n")

Env: Environment { id: 27, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(4))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 745


In function eval_function_call:

new_env after mapping formal args: Environment { id: 28, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 754


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 755


Eval Var:

Expression: Var("n")

Env: Environment { id: 28, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 760


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 761


Eval Var:

Expression: Var("n")

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 762


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 763


In function eval_function_call:

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 764


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 766


In function eval_function_call:

new_env after copying functions: Environment { id: 29, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 767


Eval Var:

Expression: Var("n")

Env: Environment { id: 28, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(3))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 769


In function eval_function_call:

new_env after mapping formal args: Environment { id: 29, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 778


Eval LTE:

Expression: LTE(Var("n"), CInt(1))

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 779


Eval Var:

Expression: Var("n")

Env: Environment { id: 29, stack_len: 1, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 784


Eval Mul:

Expression: Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))]))

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 785


Eval Var:

Expression: Var("n")

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 786


Eval Function Call:

Expression: FuncCall("fat", [Sub(Var("n"), CInt(1))])

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 787


In function eval_function_call:

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 788


In function eval_function_call:

Function 'fat' successfully found in environment



-----------------------------------------
            counter: 790


In function eval_function_call:

new_env after copying functions: Environment { id: 30, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 791


Eval Var:

Expression: Var("n")

Env: Environment { id: 29, stack_len: 2, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(2))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }, Scope { variables: {"resultado": (true, CInt(0))}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 793


In function eval_function_call:

new_env after mapping formal args: Environment { id: 30, stack_len: 0, current_func: "fat", output: [], globals: Scope { variables: {"n": (false, CInt(1))}, functions: {"fat": Function { name: "fat", kind: TInteger, params: [FormalArgument { argument_name: "n", argument_type: TInteger }], body: Some(Block([VarDeclaration("resultado", CInt(0)), IfThenElse(LTE(Var("n"), CInt(1)), Block([Assignment("resultado", CInt(1))]), Some(Block([Assignment("resultado", Mul(Var("n"), FuncCall("fat", [Sub(Var("n"), CInt(1))])))]))), Return(Var("resultado"))])) }}, adts: {} }, stack: [] }

