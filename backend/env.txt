

-----------------------------------------
            counter: 284


New Env: 20



-----------------------------------------
            counter: 287


Env 20 pushed:

Environment { id: 20, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 289


New Env: 21



-----------------------------------------
            counter: 290


Function f mapped to Env 21

Environment { id: 21, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {"x": (false, TInteger), "y": (false, TInteger)}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 292


Env 21 pushed:

Environment { id: 21, stack_len: 1, current_func: "f", output: [], globals: Scope { variables: {"x": (false, TInteger), "y": (false, TInteger)}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 298


Env 21 popped:

Environment { id: 21, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {"x": (false, TInteger), "y": (false, TInteger)}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 299


Function f mapped to Env 20

Environment { id: 20, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }] }



-----------------------------------------
            counter: 301


Env 20 popped:

Environment { id: 20, stack_len: 0, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 303


New Env: 22



-----------------------------------------
            counter: 307


Env 22 pushed:

Environment { id: 22, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 310


Function f mapped to Env 22

Environment { id: 22, stack_len: 1, current_func: "", output: [], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [Scope { variables: {}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }] }



-----------------------------------------
            counter: 314


New Env: 23



-----------------------------------------
            counter: 316


Trying to create variable ...

Variable 'x' was successfully created

Environment { id: 23, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {"x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 317


Trying to create variable ...

Variable 'y' was successfully created

Environment { id: 23, stack_len: 0, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 321


Env 23 pushed:

Environment { id: 23, stack_len: 1, current_func: "f", output: [], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [Scope { variables: {}, functions: {}, adts: {} }] }



-----------------------------------------
            counter: 332


Env 23 popped:

Environment { id: 23, stack_len: 0, current_func: "f", output: ["1", "2"], globals: Scope { variables: {"y": (false, CInt(2)), "x": (false, CInt(1))}, functions: {"f": Function { name: "f", kind: TVoid, params: [FormalArgument { argument_name: "x", argument_type: TInteger }, FormalArgument { argument_name: "y", argument_type: TInteger }], body: Some(Block([Print(Var("x")), Print(Var("y")), Return(CVoid)])) }}, adts: {} }, stack: [] }



-----------------------------------------
            counter: 335


Env 22 popped:

Environment { id: 22, stack_len: 0, current_func: "", output: ["1", "2"], globals: Scope { variables: {}, functions: {}, adts: {} }, stack: [] }

